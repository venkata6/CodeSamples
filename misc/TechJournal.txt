http://api.sports.yahoo.com:4080/v1/editorial/league/ncaaf/teams;count=100/players
http://api.sports.yahoo.com:4080/v1/editorial/league/ncaaf/teams;count=5/players


some curl command - curl -sS -v -o /tmp/test -H "Host: alpha.cricket.yahoo.com" 'http://s1.ycpi.in.yahoo.net/ws/pd/predict.php?method=getTemplateDetail&id=12'

put/take server in rotation --- yinst <start/stop> yapache_status

for i in {1..4000} ; do curl "http://search.cricket.yahoo.com/addAlldata.php/basic?query=personid:%3C1000000&search=playerprofile&summary=playersummary&hits=1&offset=$i" | head  -n 11 | tail -n 3  | perl -ne 'chomp; print "$_ ";' ; echo "" ; done > ./vesparesult

for i in {1..4000} ; do curl "http://search.cricket.yahoo.com/addAlldata.php/basic?query=personid:%3C1000000&search=playerprofile&summary=playersummary&hits=1&offset=$i" | head  -n 11 | tail -n 3  | perl -ne 'chomp; print "$_ ";' ; echo "" ; done > ./vesparesult

for i in {1..4000} ; do curl "http://vespa2.cricket.re4.yahoo.com/addAlldata.php/basic?query=personid:%3C1000000&search=playerprofile&summary=playersummary&hits=1&offset=$i" | head  -n 11 | tail -n 3  | perl -ne 'chomp; print "$_ ";' ; echo "" ; done > ./vesparesult

zcat access-2008-11-10-03:00:02.gz | convert_ncsa

-bash-3.2$ nslookup cricket.yahoo.com

netstat –a | grep FIN_WAIT_2

mdbm_stat /tmp/maple_cachestore.mdbm

FIN_WAIT_2: When the server closes a TCP connection, it sends a packet with the FIN bit sent to the client, which then responds with a packet with the ACK bit set. The client then sends a packet with the FIN bit set to the server, which responds with an ACK and the connection is closed. The state that the connection is in during the period between when the server gets the ACK from the client and the server gets the FIN from the client is known as FIN_WAIT_2.

ps -axlm

cat error | grep -i someone | awk '{print $4 " "  $17}'

yroot --create <username>
yroot <username>
yinst admin/user-sureshkm

sysctl -a  //for all system resources

/proc/sys/net/ipv4/ip_local_port_range

mysql> show status like 'QCache_%';
mysql_proxy.stunnel_maxclients: 800
75:max_connections  = 100
because mysql max nconn is 3.9 but numq is 42.2

*******************************************************************************************

$ for i in {1..99}; do curl -I# -H'Host: api.cricket.yahoo.com' -w'%{time_connect} | %{time_total}' http://api.cricket.vip.in2.yahoo.com/ws/score/fps.php?m=123 | tail -1; done
$ for i in {1..99}; do curl -I# -H'Host: api.cricket.yahoo.com' -w'%{time_connect} | %{time_total}' http://api1.cricket.vip.re4.yahoo.com/ws/score/fps.php?m=123 | tail -1; done

http://twiki.corp.yahoo.com/view/Media/YapacheLogReport

zcat access-2009-01-31-00:00:03.gz access-2009-01-31-01:00:03.gz access-2009-01-31-02:00:03.gz access-2009-01-31-03:00:04.gz  access-2009-01-31-04:00:03.gz  access-2009-01-31-05:00:03.gz 

access-2009-01-31-06:00:02.gz access-2009-01-31-07:00:03.gz  access-2009-01-31-08:00:03.gz access-2009-01-31-09:00:03.gz  | /home/y/bin/readlog -f url,ip,status | awk '{print $2,$3;}' | grep 404

Slow calls check - for i in `ls access-2009-02-05-0[0-9]?:*.gz`; do zcat $i | readlog -f duration,url | sort -g | tail -n 20 ; done > ~/Feb5ApiSlowCalls.txt

checking news:
 for i in `ls access-2009-03-03-0[0-9]:*.gz`; do zcat $i | readlog -f url | grep -i /cricket/news ; done > ~/March3CronkiteCalls.txt

for i in `ls error-2009-06-10-[08-19]*.gz`; do zcat  $i ; done | grep -i -A 1  'Feed replay' | less

Clearing repo cache command - /home/y/sbin/maple_repo_load -c /tmp/maple.mdbm -r /home/y/share/maple_repository/ -u registry/urns.xml -i default -p registry/pages.xml -d


SQUID check:
   squidclient mgr:info

Mysql PWD:
sudo cat /home/y/conf/keydb/mysqlroot.keydb

http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.msagent&tid=72c30d80-c339-438e-ba33-788a5123f73e&cat=en_US_0f33d82a-a36a-4b73-b298-517874427414&lang=en&cr=US&sloc=&p=1
http://www.tapiex.com/ES_Help/WP_XML_TTS_Tutorial.htm

Ferret report is here: 
 http://ferret.corp.yahoo.com/r/summary?dir=yahoo%2Fproperties%2Fcricket%2F&sid=0

/home/y/bin/igor -debug -user sudiptab -prop mac perm -role mac.cricket.permission -group in-cms  -perm read -log msg

Please be sure you have followed our document on how to configure your Origin Servers and that we are notified of new
Property or Content launches:

http://twiki.corp.yahoo.com/view/Platform/YCSHostingOwnOriginServer
http://twiki.corp.yahoo.com/view/Platform/YCSPropLaunch
http://twiki.corp.yahoo.com/view/Platform/YCSPropSupport

sudo gdb yapache.core.65534.65253 /home/y/bin/yapache


add yinst setting cricket_env.html_pd_about_default_item=http://eah.staging.cricket.vip.in2.yahoo.com:4080/item/2.0/-/id-263

update_changelog cricket_html_pd_content.CHANGELOG cricket_html_pd_content.yicf patch

Prod package creation:
a) yinst create -r cricket_html_pd_content.yicf
b) dist_install cricket_html_pd_content-1.0.2.tgz -nomail -br current -batch

dig mm.o.yimg.com TXT | grep YCS
dig alpha.cricket.yahoo.com.o.yimg.com TXT | grep YCS

Steps to flush ysquid cache:
Stop ysquid
yinst stop ysquid
Check to ensure ysquid is stopped (ps -ax | grep squid)
Delete the cache directories and swap state files
rm -rf /home/y/var/ysquid/cache/0* ; rm -f /home/y/var/ysquid/cache/swap.state
Recreate the cache directories.
sudo /home/y/sbin/ysquid -z
Start ysquid
yinst start ysquid


-bash-3.2$ ps axlm | grep memcache
 9794  1908  1900   0   8  0  5352  2692 nanslp I     ??    0:00.00 /home/y/bin/ymon -q passive -s memcached -w 240 /home/y/libexec/ymon/check_memcached --m
31816  1956  1951   0  -8  0  5968  1300 piperd S+    p0    0:00.00 grep memcache
 9794  1900  1895   0   8  0  5136  1476 wait   Is    ??    0:00.00 /bin/sh -c $ROOT/bin/ymon -q passive -s memcached -w 240 $ROOT/libexec/ymon/check_memcac
 9794  1909  1900   0  -8  0  2544   896 piperd I     ??    0:00.00 logger -t ymon_memcached
-bash-3.2$ hostname
ysquid1.cricket.in2.yahoo.com

1) login to the memcached servers ysquid1/ysquid2 in in2
2) make sure that the memecache servers are up

ps axlm | grep memcached

if not then do

yinst start memcached_y
# check ps axlm | grep memcached

3) go to one of the api servers ( api1-4 )
4) take it oor
5) run the following script
http://vault.yahoo.com/viewcvs/yahoo/properties/cricket/templates/generic_intl/all/cricket_platforms/lib/bin/failover_memcache.php?revision=1.1&view=markup

before that make sure that both the memcached processes are up and running

6) monitor the db load for this read
7) its going to take time sometime to upload 80,000 key,value pairs so be patient :-)


Fix for the Fancount problem after the cache got rebooted yesterday

1)login to the memcached servers ysquid1/ysquid2 in in2
2) stop the memcached_y processs yinst stop mamcached_y
3) disable the crontab in all the api servers by yinst cron -off cricket_memcache_scripts-0.0.3
4)
http://vault.yahoo.com/viewcvs/yahoo/properties/cricket/templates/generic_intl/all/cricket_platforms/lib/bin/memcache_fancount_fix.php?revision=1.1&view=markup 

copy this from vault and run it from one of the api boxes to fix the fancount for the teams in the db

now db data is ready for reload

5) make the memcache servers up
yinst start memcached_y
# check ps axlm | grep memcached

6) go to one of the api servers ( api1-4 )
7) take it oor
8) run the following script
http://vault.yahoo.com/viewcvs/yahoo/properties/cricket/templates/generic_intl/all/cricket_platforms/lib/bin/failover_memcache.php?revision=1.1&view=markup 

9) make the crontab up in all the servers

yinst cron -on cricket_memcache_scripts-0.0.3

DONE

#!/bin/bash

for vespa_url in `cat /home/y/logs/ysquid/access.log | awk ' { print $7; }' | grep 'search.cricket' "`;
do
    echo "Flushing $vespa_url";
    squidclient -r -p 3128 "$vespa_url" 
done;

checking for mysqlproxy status - /home/y/libexec/ymon/check_mysql_proxy
http://gdt-db01.cricket.in2.yahoo.com/mysql_proxy/global_master_health.php
sudo /home/y/bin/mysql_proxy_failover in2

Vespa URLs:  sudo vespafeeder remove.xml
 /home/y/share/vespa/render/removeFrmvespa.php

<?xml version="1.0" encoding="utf-8"?>
<vespafeed>
<remove documentid="doc:01_tussauds_sachin1:video:www.yahoo.com" />
<remove documentid="doc:01_tussauds_cutaways3:video:www.yahoo.com" />
<remove documentid="doc:01_tussauds_sachin2:video:www.yahoo.com" />
<remove documentid="docachin_wax_figure_cutawys:video:www.yahoo.com" />
<remove documentid="doc:01_tussauds_cutaways2:video:www.yahoo.com" />
<remove documentid="doc:wax_cutaways:video:www.yahoo.com" />
<remove documentid="doc:31971140:video:www.yahoo.com" />
</vespafeed>


1) audio - http://search.cricket.yahoo.com/addAlldata.php/basic?query=sddocname:cricketPodcast&sorting=-cricketPodcastDate&hits=100
2) Video landing - http://search.cricket.yahoo.com/addAlldata.php/basic?query=matchid:3197&sorting=-date_video_clip&search=video&hits=26
3) Video Features -  http://search.cricket.yahoo.com/addAlldata.php/basic?query=category:Features&sorting=-date_video_clip&search=video&hits=26
4) team landing page - http://search.cricket.yahoo.com/addAlldata.php/basic?query=testrank:%3E0&sorting=+testrank&search=teamprofile&hits=30
http://search.cricket.yahoo.com/addAlldata.php/basic?query=testrank:%3E0&amp;sorting=%2Btestrank&amp;search=teamprofile&amp;hits=30
http://search.cricket.yahoo.com/addAlldata.php/basic?query=testrank:%3C1%20teamid:%3C1100&sorting=%2Bteamname&search=teamprofile&hits=50
http://search.cricket.yahoo.com/addAlldata.php/basic?query={cricket.teams.player_ids_list}&amp;search=playerprofile&amp;type=any&amp;hits=30
5) Photo albums - http://search.cricket.vip.in2.yahoo.com:4080/addAlldata.php/?query=sddocname%3APhotoAlbum+albumid%3A12458205871223&sorting=albumDate&hits=100&offset=0
6) Series header - basic?query=series_id:{param.series_id}&amp;summary=seriesmetadata&amp;search=series
7) Series data - http://search.cricket.vip.in2.yahoo.com:4080/addAlldata.php/?query=series_id:1187&search=series
8) Live match -  http://search.cricket.yahoo.com/addAlldata.php/basic?query=match_status:live&search=matches
9) Post match - http://search.cricket.yahoo.com/addAlldata.php/?query=match_status:post&sorting=-date_match_start&search=matches&hits=4&offset=0
10) Ground Profile - http://search.cricket.vip.in2.yahoo.com:4080/addAlldata.php/?query=groundid:20&search=groundprofile
11) Top ODI batsmen - http://vespa2.staging.cricket.in2.yahoo.com:4080/addAlldata.php/basic?query=sddocname:playerProfile%20odibatrank:%3C10
12) player profile - http://search.cricket.yahoo.com/addAlldata.php/basic?query=personid:2962&search=playerprofile
13) team profile - http://search.cricket.yahoo.com/addAlldata.php/basic?query=teamid:1107&search=teamprofile
14) http://search.cricket.yahoo.com:4080/addAlldata.php/basic?query=%28date_series_start:%3C20100527000000%20AND%20date_series_end:%3E20100527000000%29%20OR%20date_series_end:[20100527060000]%20OR%20date_series_start:[20100527000000]&sorting=-date_series_start&search=series&type=adv&sorting=%2Bdate_series_start&summary=seriesmetadata

vespa observation console - http://vespa2.cricket.in2:8080/observationconsole/
http://vespa2.cricket.in2.yahoo.com:5820/

php -r 'print(date("Ymd G:i:s ",'1265996279')."\n");'

PERM  = 440
OWNER = root
# Must be numeric, as the GROUP variable is invoked during package
# unpacking - which occurs before the pre-install phase of
# dbdist_group.
GROUP = 10605

truss -- trace system calls

bash-3.2$ nc -zv scache1.cricket.re4.yahoo.com 11211
Connection to scache1.cricket.re4.yahoo.com 11211 port [tcp/*] succeeded!
-bash-3.2$ nc -zv scache2.cricket.re4.yahoo.com 11211
Connection to scache2.cricket.re4.yahoo.com 11211 port [tcp/*] succeeded!sudo /home/y/sbin/maple_repo_load -c /tmp/maple.mdbm -r /home/y/share/maple_repository/ -u registry/urns.xml -i default -p registry/pages.xml -m  -e utf-8 -d

**** dbdist verification *****
1) check dbdist server running properly - by running 
   dbdist -groups
2) check dbdist client running properly - by running 
   dbdist-check 
  Both the server and client channel names must match
3) send a message from server to client 
  dbdist prodcricketfeed -message '/hello gamma'
4) check client log at /home/y/logs/dbdist
   tail -f client.log 

**************************
dbdist prodcricketpd /home/y/var/fufp/fufp_processed/GroundProfile-244.xml -as /home/y/var/dbdist/feedsfactory/GroundProfile-244.xml

The creation of many temporary files in Unix during compilations, occupies a lot of memory space. This can be got rid of by using a simple script. 
find $1 \( -name a.out -o -name '*.o' -o -name 'core' -o -name '*.ii' -o -name '*.ti' -o -name '*.class' -o -name '*.pur' \) -exec rm {} \;

Here is a find command that will print all the directories in the
current filesystem, with the number of files (inodes) in that directory.

find . -xdev -type d -exec /bin/echo -n {} \; -exec sh -c "ls {} | wc -l" \;

find . -type f -exec grep "string or options" /dev/null {} \;

grep -v "#" /etc/hosts | awk '{print $1}' | while read host ; do ping -c 1 $host ; done

To check the system calls and signals coming into and going out of a process use /usr/bin/truss. i.e. truss pid

# for temp in *
> do
> echo cp $temp $temp.org >> t.txt
> done

subshell:
  $ ( \ls; echo dir; mkdir dir ) | xargs mv
replace string A with String B in a file:

perl -p -i -e 's/original text string/replacement string' foo

find $1 \( -name a.out -o -name '*.o' -o -name 'core' -o -name '*.ii' -o -name '*.ti' -o -name '*.class' -o -name '*.pur' \) -exec rm {} \;

*****************************EXAMPLE OF HOW TO GET FILES FROM DIFFERENT SERVERS AND CHECK FOR PATTERNS*********************
for i in 1 2 3 4 5 6 7 ; do scp -r "varjunan@api$i.cricket.re4:/home/y/var/cricket/decoded/2009/11/08"  .; done 
find . | xargs grep -il  "scorecard" | xargs grep -il 23024 | xargs grep -i "<Total>"
find . | xargs grep -il 23024| xargs grep -i "currentover"|awk '{print $9}'|awk -F">"  '{print $3">"$4">"$5">"$6 }'
for i in 1 2 3 4 5 6 7 ; do scp -r "varjunan@api$i.cricket.re4:/home/y/var/cricket/decoded/2009/11/08"  .; done 

perl -pi -e  's/<old string>/<new string>' `find . -name "<file name>"`
*************************
Bash provides many hot keys to ease use. Like
ctrl-l  -- clear screen
ctrl-r  -- does a search in the previously given commands so that you don't
        have to repeat long command.
ctrl-u  -- clears the typing before the hotkey.
ctrl-a  -- takes you to the begining of the command you are currently typing.
ctrl-e  -- takes you to the end of the command you are currently typing in.
esc-b   -- takes you back by one word while typing a command.
ctrl-c  -- kills the current command or process.
ctrl-d  -- kills the shell.
ctrl-h  -- deletes one letter at a time from the command you are typing in.
ctrl-z  -- puts the currently running process in background, the process
        can be brought back to run state by using fg command.
esc-p  -- like ctrl-r lets you search through the previously given commands.
esc-.  -- gives the last command you typed.
*********************************************************
*****************For zeroing the log file ******************
for object in *.log
do
> $object
print "$object has been zeroed!"
done 
***********************************************************


#!/bin/sh
grep -v "#" /etc/hosts | awk '{print $1}' | while read host
do
  ping -c 1 $host
done      
